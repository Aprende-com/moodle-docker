#!/usr/bin/env bash

# Read and set environment variables.
if [ -f ~/moodle-docker/.env ]; then
    cd ~
    export $(cat ~/moodle-docker/.env | xargs | envsubst)
    export MOODLE_DOCKER_WWWROOT=$MOODLE_DOCKER_WWWROOT/$COMPOSE_PROJECT_NAME
    cd ~/moodle-docker
else
    echo "Cannot find .env file."
    exit 1
fi

# Check if Docker is available.
docker-compose --version 2>/dev/null
if [ $? -ne 0 ]; then
    if [[ -n "$IS_WSL" || -n "$WSL_DISTRO_NAME" ]]; then
        # For WSL2
        echo "Ensure that Docker Desktop for Windows is installed and running."
        echo "Ensure that Docker Desktop > Settings > Resources > WSL Integration is enabled."
        echo "You must start WSL before starting Docker. Click Docker > Troubleshoot > Restart button."
    else
        # For Linux/MacOS X.
        echo "Ensure that Docker and Docker-Compose are installed."
    fi
    exit 127
fi

action=$1

case $action in
    start)
        bin/moodle-docker-compose start
        echo "Use './moodle stop' to pause the docker containers or './moodle help' for more information."
        ./moodle help
        exit 0
        ;;
    stop)
        bin/moodle-docker-compose stop
        echo "Use './moodle start' to resume operation of docker containers or './moodle help' for more information."
        exit 0
        ;;
    uninstall)
        action="ABORT"
        while true; do
            read -p "Are you sure that you want to remove the site? (y/n) " action
            case $action in
                [Yy]* )
                    action="DELETE"
                    break;;
                [Nn]* )
                    break;;
                * )
                    echo "Please answer yes or no.";;
            esac
        done
        if [ $action == "DELETE" ]; then
            bin/moodle-docker-compose stop
            bin/moodle-docker-compose down --remove-orphans
            docker network prune -f
            if [ -d "$MOODLE_DOCKER_WWWROOT" ]; then
                echo "Deleting the Moodle application directory..."
                sudo rm -rf $MOODLE_DOCKER_WWWROOT
                echo "Use './moodle reset' to build, or './moodle help' for more information."
            fi
        fi
        ;;
    down)
        bin/moodle-docker-compose stop
        bin/moodle-docker-compose down --remove-orphans
        docker network prune -f
        echo "Use './moodle up' to restart, './moodle reset' to rebuild, or './moodle help' for more information."
        exit 0
        ;;
    status)
        docker ps --filter name=moodle
        exit 0
        ;;
    logs)
        echo 'Note: Press CTRL-C to exit.'
        docker logs $COMPOSE_PROJECT_NAME-webserver --follow
        ;;
    update)
        echo "Updating moodle in $MOODLE_DOCKER_WWWROOT"
        pushd $MOODLE_DOCKER_WWWROOT > /dev/null
        echo "--------------------"
        echo "Updating Moodle..."
        echo "--------------------"
        git pull
        echo "--------------------"
        echo "Updating submodules..."
        echo "--------------------"
        git submodule update --remote
        popd > /dev/null
        echo "Done."
        echo "IMPORTANT: Be sure to login and go to Notifications to update the database."
        ./moodle start
        exit 0
        ;;
    up)
        if [ -d $MOODLE_DOCKER_WWWROOT ] && [ ! -z "$(docker volume ls -q --filter name=${COMPOSE_PROJECT_NAME})" ]; then
            # Starts Docker.
            bin/moodle-docker-compose up -d
            # Wait for DB to come up (important for oracle/mssql)
            bin/moodle-docker-wait-for-db
            # Starts Containers
            bin/moodle-docker-compose start
        else
            echo "There are no existing containers and volumes for project ${COMPOSE_PROJECT_NAME})."
            echo "You need to run ./moodle reset first."
        fi
        ;;
    reset)  # Reset docker build..
        git ls-remote "git@github.com:Aprende-com/moodle-docker-assets.git" CHECK_GIT_REMOTE_URL_REACHABILITY
        status=$?
        if [ $status -ne 0 ]; then
            echo "You need to first set up an SSH key in order to access Aprende-com's private repositories on GitHub."
            echo "Exiting (error $status)."
            exit $status
        fi

        # Cache sudo password.
        sudo false

        shift

        rebuild="N"
        if [ -d "$MOODLE_DOCKER_WWWROOT" ]; then
            echo "Existing Moodle application directory detected."
            while true; do
                read -p "Do you want re-create it (slower and destructive) again? (y/n) " rebuild
                case $rebuild in
                    [Yy]* )
                        rebuild="Y"
                        break;;
                    [Nn]* )
                        break;;
                    * )
                        echo "Please answer yes or no.";;
                esac
            done
        fi

        # Reset Start time.
        SECONDS=0

        # Stop the containers.
        bin/moodle-docker-compose stop
        bin/moodle-docker-compose down --remove-orphans
        docker network prune -f

        # Delete all containers.
        list=$(docker ps -a -q --filter name=${COMPOSE_PROJECT_NAME})
        if [ ! -z "$list" ]; then
            echo "Deleting all containers..."
            docker rm -f $list
        fi

        # Delete all volumes.
        list=$(docker volume ls -q --filter name=${COMPOSE_PROJECT_NAME})
        if [ ! -z "$list" ]; then
            echo "Deleting all volumes..."
            docker volume rm $list
        fi

        echo "Starting build on $(date)"

        if [ $rebuild = 'Y' ]; then
            echo "Deleting the Moodle application directory..."
            sudo rm -rf $MOODLE_DOCKER_WWWROOT
        fi

        # Install the Moodle Applicaton.

        # Moodle application repo.
        REPO="${MOODLE_DOCKER_MOODLE_REPO}"
        # Specific Moodle branch to checkout.
        BRANCH="${MOODLE_DOCKER_MOODLE_BRANCH}"
        # Branch to check out for Moodle plugins.
        PBRANCH="${MOODLE_DOCKER_PLUGIN_BRANCH}"

        if [ ! -d "$MOODLE_DOCKER_WWWROOT" ]; then
            echo "Creating the Moodle application directory."
            echo "Please be patient, this will take a while..."

            mkdir $MOODLE_DOCKER_WWWROOT
            pushd $MOODLE_DOCKER_WWWROOT > /dev/null

            # Get the Moodle application repo.
            git clone --branch $BRANCH git@github.com:$REPO .

            if [ "$REPO" = "Aprende-com/moodle-dev.git" ]; then
                # Install some additional development tools.
                git clone https://github.com/mudrd8mz/moodle-tool_pluginskel.git $MOODLE_DOCKER_WWWROOT/admin/tool/pluginskel
                # git clone https://github.com/moodlehq/moodle-local_codechecker.git $MOODLE_DOCKER_WWWROOT/local/codechecker
                git clone https://github.com/moodlehq/moodle-local_moodlecheck $MOODLE_DOCKER_WWWROOT/local/moodlecheck
                git clone https://github.com/davidscotson/moodle-tool_themetester.git $MOODLE_DOCKER_WWWROOT/admin/tool/themetester
                git clone https://github.com/gjb2048/moodle-block_theme_selector.git $MOODLE_DOCKER_WWWROOT/blocks/theme_selector
                git clone https://github.com/grabs/moodle-local_adminer.git $MOODLE_DOCKER_WWWROOT/local/adminer
                git clone git@github.com:Aprende-com/moodle_development_kit.git $MOODLE_DOCKER_WWWROOT/adk
            fi

            # If we have a .gitmodules file, install the submodules.
            if [ -f .gitmodules ]; then
                git submodule update --init --recursive .
                # For each Aprende plugin, checkout specific a specific branch if specified.
                if [ ! -z "$PBRANCH" ]; then
                    # Apply the specified branch and update it if it exists.
                    git submodule foreach "
                        git fetch origin;
                        exists=\$(git branch -r --list origin/${PBRANCH});
                        if [ ! -z \$exists ]; then
                            git checkout ${PBRANCH};
                            git pull --rebase;
                        fi;
                    "
                fi

                if [ "$MOODLE_DOCKER_MOODLE_VERSION" = "4.0" ]; then
                    # Apply aprende_400_features branch if it exists and rebase it using latest in master for aprende-owned plugins.
                    git submodule foreach "
                        git fetch origin;
                        exists=\$(git branch -r --list origin/aprende_400_features);
                        if [ ! -z \$exists ]; then
                            git checkout aprende_400_features;
                            git reset --hard HEAD;
                            cd - > /dev/null;
                            aprende=\$(git config -f .gitmodules --default false --get submodule.\$sm_path.aprende);
                            cd - > /dev/null;
                            if [ \$aprende = "true" ]; then
                                git pull --rebase origin master;
                                # git pull --rebase origin master && git push origin HEAD;
                            fi;
                            echo
                        fi;
                    "
                fi

                # Otherwise, leave repos on default branches.
            fi

            popd > /dev/null

            # Add a Docker specific config file into Moodle.
            cp config.docker-template.php $MOODLE_DOCKER_WWWROOT/config.php

        fi

        # Starts docker
        bin/moodle-docker-compose up -d
        # Wait for DB to come up (important for oracle/mssql)
        bin/moodle-docker-wait-for-db
        # Starts Containers
        bin/moodle-docker-compose start

        # Continue installation of database and moodledata. Moodle application files is the only persistent content.

        # ===========================
        echo "=== Creating the database."
        # ===========================
        docker exec -ti $COMPOSE_PROJECT_NAME-db mysql -e "DROP DATABASE IF EXISTS $COMPOSE_PROJECT_NAME"
        docker exec -ti $COMPOSE_PROJECT_NAME-db mysql -e "CREATE DATABASE $COMPOSE_PROJECT_NAME DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci"

        # ===========================
        echo "=== Initializing Moodle."
        # ===========================
        # Preparing Aprende private assets.
        if [ "$REPO" = "Aprende-com/moodle-dev.git" ]; then
            if [ -d $MOODLE_DOCKER_WWWROOT/assets ]; then
                rm -rf $MOODLE_DOCKER_WWWROOT/assets
            fi
            git clone git@github.com:Aprende-com/moodle-docker-assets.git $MOODLE_DOCKER_WWWROOT/assets
            docker exec -ti $COMPOSE_PROJECT_NAME-webserver mv /var/www/html/assets /tmp/
            docker exec -ti $COMPOSE_PROJECT_NAME-webserver bash -c /tmp/assets/mdl-init.sh $MOODLE_DOCKER_MOODLE_VERSION /var/www/moodledata
        else
            docker exec -ti $COMPOSE_PROJECT_NAME-webserver php admin/cli/install_database.php --lang="en" --adminuser="admin" --adminpass="moodle" --adminemail="admin@local.localhost" --agree-license --fullname="Aprende $MOODLE_DOCKER_MOODLE_VERSION Local DEV" --shortname="Moodle DEV $MOODLE_DOCKER_MOODLE_VERSION"
        fi
        echo "Your Moodle site is ready."
        echo "================================= DONE ================================="
        source moodle help
        awk -v t=$SECONDS 'BEGIN{t=int(t*1000); printf "Elapsed Time (HH:MM:SS): %d:%02d:%02d\n", t/3600000, t/60000%60, t/1000%60}'
        ;;
    db)
        shift
        docker exec -ti $COMPOSE_PROJECT_NAME-db mysql $@
        ;;
    help)
        echo "Some useful commands:"
        echo "- ./moodle                   Access the Bash command line on webserver as root."
        echo "- ./moodle help              Display this help."
        echo "- ./moodle db                Access the MySQL (MariaDB) command line as root user."
        echo "- ./moodle up                Starts current build. If none exist, will start new build. See URLs below."
        echo "- ./moodle down              Shutdown a container."
        echo "- ./moodle reset             Builds and starts websites. Will result in deletion of all data. See URLs below."
        echo "- ./moodle start             Start a container."
        echo "- ./moodle stop              Stop a container without loosing data."
        echo "- ./moodle status            List of running containers."
        echo "- ./moodle logs              View logs from the Moodle Webserver."
        echo "- ./moodle update            Update running containers with latest code changes."
        echo "- ./moodle [other command]   Run the command on the webserver."
        echo ""
        if [ "$REPO" = "Aprende-com/moodle-dev.git" ]; then
            echo "From inside the container:"
            echo "- moosh                      See https://moosh-online.com/ for details."
            echo "- composer"
            echo ""
        fi
        echo "Useful URLs:"
        echo "- http://localhost:8000      Access the Moodle LMS site."
        echo "- http://localhost:8025      Access the MailHog site."
        echo "- http://localhost:8080/admin Access the Keycloak App."
        echo "- http://localhost:8100      Access the Moodle App."
        echo "- http://localhost:8900      Access phpMyAdmin."
        echo ""
        echo " Port Description:"
        echo " - localhost:1025            SMTP server for MailHog."
        echo " - localhost:3306            MariaDB server."
        if [ "$REPO" = "Aprende-com/moodle-dev.git" ]; then
            echo " - localhost:9003            Xdebug."
            echo ""
            echo "Site Credentials:            Database Credentials:"
            echo "- admin / moodle             - DB Host: db"
            echo "- manager / moodle           - DB Name: moodle"
            echo "- teacher / moodle           - DB User: moodle"
            echo "- student / moodle           - DB Password: m@0dleing"
        else
            echo ""
            echo "Site Credentials:"
            echo "- admin / moodle"
            echo ""
            echo "Database Credentials:"
            echo "- DB Host: db"
            echo "- DB Name: moodle"
            echo "- DB User: moodle"
            echo "- DB Password: m@0dleing"
        fi
        echo ""
        echo "Be sure to login to Moodle to complete the upgrade."
        ;;
    *)
        if [[ $# -eq 0 ]]; then
            docker exec -ti $COMPOSE_PROJECT_NAME-webserver bash
        else
            docker exec -ti $COMPOSE_PROJECT_NAME-webserver bash -c $@
        fi
        ;;
esac
